System pong
 
Dispatch ball : ball(D)

Event miss: miss(D)

Event startgame: start(V)
Event endgame: end(V)

Context ctxpong  ip [host="localhost" port=8015]
Context ctxping  ip [host="127.0.0.1" port=8014] 
Context ctxreferee ip[host="127.0.0.1" port=8016]

ExternalQActor ping context ctxping
ExternalQActor referee context ctxreferee


QActor pong context ctxpong {  
	[#  val TMAX = 1000L #]
	State s0 initial{
		println("$name started") color magenta
	} 
	Transition t0
		whenEvent startgame -> starting 

	
	State starting{
		println("$name game STARTS") color red	
	}
	Transition t0
		whenTimeVar TMAX -> endofexchange
		whenMsg ball     -> reply
	//Goto receive
	
	State reply{
		onMsg( ball : ball(X)){
			[# var N = payloadArg(0).toInt()#]
			println("$name receives $N") color green
			[# N = N + 1 #]
			
			if [# N <= 9 #]{
				delay 100
				println("$name sends $N") color green
				updateResource [# "ballview($N)" #]
				forward ping -m ball : ball($N)
			}
			else {
				println("$name MISS!")
				[# N = 0 #]
				emit miss : miss($N)
			}//no forward if N == 10			
		}		
	}
	Transition t0 
		whenTimeVar TMAX -> endofexchange
		whenMsg 	ball -> reply	

	State endofexchange{
		println("$name ENDS ") color green
//		delay 1000
	}
	Transition t0 whenEvent endgame -> endgame
	
	State endgame{
		printCurrentMessage color black
		onMsg(endgame:end(N)){
			[# val X = payloadArg(0).toInt() #]
			if [# X == 0 #]{
				println("$name ho PERSO") color magenta
			}
			else{
				println("$name ho VINTO") color magenta
			}
		} 
		[# System.exit(0) #]
	}
}



