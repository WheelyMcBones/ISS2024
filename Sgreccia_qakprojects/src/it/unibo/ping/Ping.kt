/* Generated by AN DISI Unibo */ 
package it.unibo.ping

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import it.unibo.kactor.sysUtil.createActor   //Sept2023

//User imports JAN2024

class Ping ( name: String, scope: CoroutineScope, isconfined: Boolean=false  ) : ActorBasicFsm( name, scope, confined=isconfined ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		//val interruptedStateTransitions = mutableListOf<Transition>()
		 val NAME = name  
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						CommUtils.outblue("$name STARTS")
						delay(500) 
						request("gamestart", "gamestart(hit)" ,"pong" )  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t00",targetState="handleAnswer",cond=whenReply("gamestartack"))
				}	 
				state("handleDispatch") { //this:State
					action { //it:State
						updateResourceRep( "short($name)"  
						)
						CommUtils.outblue("$name received shot from ${payloadArg(0)}")
						forward("shot", "shot(NAME)" ,"pong" ) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t01",targetState="handleDispatch",cond=whenDispatch("shot"))
					transition(edgeName="t02",targetState="win",cond=whenDispatch("short"))
				}	 
				state("handleAnswer") { //this:State
					action { //it:State
						CommUtils.outblue("$name in ${currentState.stateName} | $currentMsg | ${Thread.currentThread().getName()} n=${Thread.activeCount()}")
						 	   
						delay(100) 
						if( checkMsgContent( Term.createTerm("ack(D)"), Term.createTerm("ack(D)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								forward("shot", "shot(NAME)" ,"ping" ) 
						}
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t03",targetState="handleDispatch",cond=whenDispatch("shot"))
				}	 
				state("win") { //this:State
					action { //it:State
						CommUtils.outred("$name HO VINTO!")
						 System.exit(0)  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
				}	 
			}
		}
} 
