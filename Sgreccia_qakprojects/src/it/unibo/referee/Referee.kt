/* Generated by AN DISI Unibo */ 
package it.unibo.referee

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import it.unibo.kactor.sysUtil.createActor   //Sept2023

//User imports JAN2024

class Referee ( name: String, scope: CoroutineScope, isconfined: Boolean=false  ) : ActorBasicFsm( name, scope, confined=isconfined ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		//val interruptedStateTransitions = mutableListOf<Transition>()
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						CommUtils.outblue("$name STARTS")
						observeResource("localhost","8014","ctxping","ping","short")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t04",targetState="handleUpdate",cond=whenDispatch("short"))
				}	 
				state("handleUpdate") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("short(V)"), Term.createTerm("short(V)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								CommUtils.outblack("$name shot from:${payloadArg(0)}")
						}
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
				 	 		stateTimer = TimerActor("timer_handleUpdate", 
				 	 					  scope, context!!, "local_tout_"+name+"_handleUpdate", 2000.toLong() )  //OCT2023
					}	 	 
					 transition(edgeName="t05",targetState="win",cond=whenTimeout("local_tout_"+name+"_handleUpdate"))   
					transition(edgeName="t06",targetState="handleUpdate",cond=whenDispatch("short"))
				}	 
				state("win") { //this:State
					action { //it:State
						CommUtils.outred("Pallina non ricevuta entro lo scadere: Ping Ha VINTO!")
						forward("short", "short(win)" ,"ping" ) 
						 System.exit(0)  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
				}	 
			}
		}
} 
